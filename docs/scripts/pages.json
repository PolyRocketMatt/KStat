[{"name":"NATURAL","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.EntropyType.NATURAL","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/-entropy-type/-n-a-t-u-r-a-l/index.html","searchKeys":["NATURAL","NATURAL","com.github.polyrocketmatt.kstat.distributions.Distribution.EntropyType.NATURAL"]},{"name":"SHANNON","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.EntropyType.SHANNON","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/-entropy-type/-s-h-a-n-n-o-n/index.html","searchKeys":["SHANNON","SHANNON","com.github.polyrocketmatt.kstat.distributions.Distribution.EntropyType.SHANNON"]},{"name":"abstract class AbstractRange(val minVal: Double, val maxVal: Double) : IRange","description":"com.github.polyrocketmatt.kstat.AbstractRange","location":"-k-stat/com.github.polyrocketmatt.kstat/-abstract-range/index.html","searchKeys":["AbstractRange","abstract class AbstractRange(val minVal: Double, val maxVal: Double) : IRange","com.github.polyrocketmatt.kstat.AbstractRange"]},{"name":"abstract class Distribution(seed: Int)","description":"com.github.polyrocketmatt.kstat.distributions.Distribution","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/index.html","searchKeys":["Distribution","abstract class Distribution(seed: Int)","com.github.polyrocketmatt.kstat.distributions.Distribution"]},{"name":"abstract fun cdf(x: Double): IRange","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.cdf","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/cdf.html","searchKeys":["cdf","abstract fun cdf(x: Double): IRange","com.github.polyrocketmatt.kstat.distributions.Distribution.cdf"]},{"name":"abstract fun difference(range: IRange): List<IRange>","description":"com.github.polyrocketmatt.kstat.AbstractRange.difference","location":"-k-stat/com.github.polyrocketmatt.kstat/-abstract-range/difference.html","searchKeys":["difference","abstract fun difference(range: IRange): List<IRange>","com.github.polyrocketmatt.kstat.AbstractRange.difference"]},{"name":"abstract fun entropy(type: Distribution.EntropyType): Double","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.entropy","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/entropy.html","searchKeys":["entropy","abstract fun entropy(type: Distribution.EntropyType): Double","com.github.polyrocketmatt.kstat.distributions.Distribution.entropy"]},{"name":"abstract fun fisherInformation(): Double","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.fisherInformation","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/fisher-information.html","searchKeys":["fisherInformation","abstract fun fisherInformation(): Double","com.github.polyrocketmatt.kstat.distributions.Distribution.fisherInformation"]},{"name":"abstract fun intersection(range: IRange): IRange","description":"com.github.polyrocketmatt.kstat.AbstractRange.intersection","location":"-k-stat/com.github.polyrocketmatt.kstat/-abstract-range/intersection.html","searchKeys":["intersection","abstract fun intersection(range: IRange): IRange","com.github.polyrocketmatt.kstat.AbstractRange.intersection"]},{"name":"abstract fun kurtosis(): Double","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.kurtosis","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/kurtosis.html","searchKeys":["kurtosis","abstract fun kurtosis(): Double","com.github.polyrocketmatt.kstat.distributions.Distribution.kurtosis"]},{"name":"abstract fun mad(): Double","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.mad","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/mad.html","searchKeys":["mad","abstract fun mad(): Double","com.github.polyrocketmatt.kstat.distributions.Distribution.mad"]},{"name":"abstract fun mean(): Double","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.mean","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/mean.html","searchKeys":["mean","abstract fun mean(): Double","com.github.polyrocketmatt.kstat.distributions.Distribution.mean"]},{"name":"abstract fun median(): IRange","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.median","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/median.html","searchKeys":["median","abstract fun median(): IRange","com.github.polyrocketmatt.kstat.distributions.Distribution.median"]},{"name":"abstract fun mode(): IRange","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.mode","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/mode.html","searchKeys":["mode","abstract fun mode(): IRange","com.github.polyrocketmatt.kstat.distributions.Distribution.mode"]},{"name":"abstract fun moment(n: Int): Double","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.moment","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/moment.html","searchKeys":["moment","abstract fun moment(n: Int): Double","com.github.polyrocketmatt.kstat.distributions.Distribution.moment"]},{"name":"abstract fun momentGeneratingFunction(): (Int) -> Double","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.momentGeneratingFunction","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/moment-generating-function.html","searchKeys":["momentGeneratingFunction","abstract fun momentGeneratingFunction(): (Int) -> Double","com.github.polyrocketmatt.kstat.distributions.Distribution.momentGeneratingFunction"]},{"name":"abstract fun pdf(x: Double): IRange","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.pdf","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/pdf.html","searchKeys":["pdf","abstract fun pdf(x: Double): IRange","com.github.polyrocketmatt.kstat.distributions.Distribution.pdf"]},{"name":"abstract fun quantile(x: Double): IRange","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.quantile","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/quantile.html","searchKeys":["quantile","abstract fun quantile(x: Double): IRange","com.github.polyrocketmatt.kstat.distributions.Distribution.quantile"]},{"name":"abstract fun sample(n: Int, vararg support: Double): DoubleArray","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.sample","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/sample.html","searchKeys":["sample","abstract fun sample(n: Int, vararg support: Double): DoubleArray","com.github.polyrocketmatt.kstat.distributions.Distribution.sample"]},{"name":"abstract fun sample(vararg support: Double): Double","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.sample","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/sample.html","searchKeys":["sample","abstract fun sample(vararg support: Double): Double","com.github.polyrocketmatt.kstat.distributions.Distribution.sample"]},{"name":"abstract fun skewness(): Double","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.skewness","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/skewness.html","searchKeys":["skewness","abstract fun skewness(): Double","com.github.polyrocketmatt.kstat.distributions.Distribution.skewness"]},{"name":"abstract fun stddev(): Double","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.stddev","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/stddev.html","searchKeys":["stddev","abstract fun stddev(): Double","com.github.polyrocketmatt.kstat.distributions.Distribution.stddev"]},{"name":"abstract fun union(range: IRange): IRange","description":"com.github.polyrocketmatt.kstat.AbstractRange.union","location":"-k-stat/com.github.polyrocketmatt.kstat/-abstract-range/union.html","searchKeys":["union","abstract fun union(range: IRange): IRange","com.github.polyrocketmatt.kstat.AbstractRange.union"]},{"name":"abstract fun variance(): Double","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.variance","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/variance.html","searchKeys":["variance","abstract fun variance(): Double","com.github.polyrocketmatt.kstat.distributions.Distribution.variance"]},{"name":"annotation class Continuous","description":"com.github.polyrocketmatt.kstat.distributions.Continuous","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-continuous/index.html","searchKeys":["Continuous","annotation class Continuous","com.github.polyrocketmatt.kstat.distributions.Continuous"]},{"name":"annotation class Discrete","description":"com.github.polyrocketmatt.kstat.distributions.Discrete","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-discrete/index.html","searchKeys":["Discrete","annotation class Discrete","com.github.polyrocketmatt.kstat.distributions.Discrete"]},{"name":"class BernoulliDistribution(seed: Int = 0, p: Double = 0.5) : Distribution","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/index.html","searchKeys":["BernoulliDistribution","class BernoulliDistribution(seed: Int = 0, p: Double = 0.5) : Distribution","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution"]},{"name":"class BinomialDistribution(n: Int, p: Double) : Distribution","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/index.html","searchKeys":["BinomialDistribution","class BinomialDistribution(n: Int, p: Double) : Distribution","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution"]},{"name":"class ContinuousRange(val values: DoubleArray, val accuracy: Double = 0.01) : AbstractRange","description":"com.github.polyrocketmatt.kstat.ContinuousRange","location":"-k-stat/com.github.polyrocketmatt.kstat/-continuous-range/index.html","searchKeys":["ContinuousRange","class ContinuousRange(val values: DoubleArray, val accuracy: Double = 0.01) : AbstractRange","com.github.polyrocketmatt.kstat.ContinuousRange"]},{"name":"class DiscreteRange(val values: Double) : AbstractRange","description":"com.github.polyrocketmatt.kstat.DiscreteRange","location":"-k-stat/com.github.polyrocketmatt.kstat/-discrete-range/index.html","searchKeys":["DiscreteRange","class DiscreteRange(val values: Double) : AbstractRange","com.github.polyrocketmatt.kstat.DiscreteRange"]},{"name":"class KStatException(cause: String) : Exception","description":"com.github.polyrocketmatt.kstat.exception.KStatException","location":"-k-stat/com.github.polyrocketmatt.kstat.exception/-k-stat-exception/index.html","searchKeys":["KStatException","class KStatException(cause: String) : Exception","com.github.polyrocketmatt.kstat.exception.KStatException"]},{"name":"class PoissonDistribution","description":"com.github.polyrocketmatt.kstat.distributions.PoissonDistribution","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-poisson-distribution/index.html","searchKeys":["PoissonDistribution","class PoissonDistribution","com.github.polyrocketmatt.kstat.distributions.PoissonDistribution"]},{"name":"class Range(val min: Double, val max: Double) : AbstractRange","description":"com.github.polyrocketmatt.kstat.Range","location":"-k-stat/com.github.polyrocketmatt.kstat/-range/index.html","searchKeys":["Range","class Range(val min: Double, val max: Double) : AbstractRange","com.github.polyrocketmatt.kstat.Range"]},{"name":"class SingleRange(val value: Double) : AbstractRange","description":"com.github.polyrocketmatt.kstat.SingleRange","location":"-k-stat/com.github.polyrocketmatt.kstat/-single-range/index.html","searchKeys":["SingleRange","class SingleRange(val value: Double) : AbstractRange","com.github.polyrocketmatt.kstat.SingleRange"]},{"name":"constructor()","description":"com.github.polyrocketmatt.kstat.distributions.PoissonDistribution.PoissonDistribution","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-poisson-distribution/-poisson-distribution.html","searchKeys":["PoissonDistribution","constructor()","com.github.polyrocketmatt.kstat.distributions.PoissonDistribution.PoissonDistribution"]},{"name":"constructor(cause: String)","description":"com.github.polyrocketmatt.kstat.exception.KStatException.KStatException","location":"-k-stat/com.github.polyrocketmatt.kstat.exception/-k-stat-exception/-k-stat-exception.html","searchKeys":["KStatException","constructor(cause: String)","com.github.polyrocketmatt.kstat.exception.KStatException.KStatException"]},{"name":"constructor(min: Double, max: Double)","description":"com.github.polyrocketmatt.kstat.Range.Range","location":"-k-stat/com.github.polyrocketmatt.kstat/-range/-range.html","searchKeys":["Range","constructor(min: Double, max: Double)","com.github.polyrocketmatt.kstat.Range.Range"]},{"name":"constructor(minVal: Double, maxVal: Double)","description":"com.github.polyrocketmatt.kstat.AbstractRange.AbstractRange","location":"-k-stat/com.github.polyrocketmatt.kstat/-abstract-range/-abstract-range.html","searchKeys":["AbstractRange","constructor(minVal: Double, maxVal: Double)","com.github.polyrocketmatt.kstat.AbstractRange.AbstractRange"]},{"name":"constructor(n: Int, p: Double)","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.BinomialDistribution","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/-binomial-distribution.html","searchKeys":["BinomialDistribution","constructor(n: Int, p: Double)","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.BinomialDistribution"]},{"name":"constructor(seed: Int = 0, p: Double = 0.5)","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.BernoulliDistribution","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/-bernoulli-distribution.html","searchKeys":["BernoulliDistribution","constructor(seed: Int = 0, p: Double = 0.5)","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.BernoulliDistribution"]},{"name":"constructor(seed: Int)","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.Distribution","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/-distribution.html","searchKeys":["Distribution","constructor(seed: Int)","com.github.polyrocketmatt.kstat.distributions.Distribution.Distribution"]},{"name":"constructor(value: Double)","description":"com.github.polyrocketmatt.kstat.SingleRange.SingleRange","location":"-k-stat/com.github.polyrocketmatt.kstat/-single-range/-single-range.html","searchKeys":["SingleRange","constructor(value: Double)","com.github.polyrocketmatt.kstat.SingleRange.SingleRange"]},{"name":"constructor(values: DoubleArray, accuracy: Double = 0.01)","description":"com.github.polyrocketmatt.kstat.ContinuousRange.ContinuousRange","location":"-k-stat/com.github.polyrocketmatt.kstat/-continuous-range/-continuous-range.html","searchKeys":["ContinuousRange","constructor(values: DoubleArray, accuracy: Double = 0.01)","com.github.polyrocketmatt.kstat.ContinuousRange.ContinuousRange"]},{"name":"constructor(vararg values: Double)","description":"com.github.polyrocketmatt.kstat.DiscreteRange.DiscreteRange","location":"-k-stat/com.github.polyrocketmatt.kstat/-discrete-range/-discrete-range.html","searchKeys":["DiscreteRange","constructor(vararg values: Double)","com.github.polyrocketmatt.kstat.DiscreteRange.DiscreteRange"]},{"name":"enum EntropyType : Enum<Distribution.EntropyType> ","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.EntropyType","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/-entropy-type/index.html","searchKeys":["EntropyType","enum EntropyType : Enum<Distribution.EntropyType> ","com.github.polyrocketmatt.kstat.distributions.Distribution.EntropyType"]},{"name":"fun binomial(n: Int, k: Int): Int","description":"com.github.polyrocketmatt.kstat.binomial","location":"-k-stat/com.github.polyrocketmatt.kstat/binomial.html","searchKeys":["binomial","fun binomial(n: Int, k: Int): Int","com.github.polyrocketmatt.kstat.binomial"]},{"name":"fun getSeed(): Int","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.getSeed","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/get-seed.html","searchKeys":["getSeed","fun getSeed(): Int","com.github.polyrocketmatt.kstat.distributions.Distribution.getSeed"]},{"name":"fun isContinuous(): Boolean","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.isContinuous","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/is-continuous.html","searchKeys":["isContinuous","fun isContinuous(): Boolean","com.github.polyrocketmatt.kstat.distributions.Distribution.isContinuous"]},{"name":"fun isDiscrete(): Boolean","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.isDiscrete","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/is-discrete.html","searchKeys":["isDiscrete","fun isDiscrete(): Boolean","com.github.polyrocketmatt.kstat.distributions.Distribution.isDiscrete"]},{"name":"fun isSubsetOf(range: AbstractRange): Boolean","description":"com.github.polyrocketmatt.kstat.AbstractRange.isSubsetOf","location":"-k-stat/com.github.polyrocketmatt.kstat/-abstract-range/is-subset-of.html","searchKeys":["isSubsetOf","fun isSubsetOf(range: AbstractRange): Boolean","com.github.polyrocketmatt.kstat.AbstractRange.isSubsetOf"]},{"name":"fun isSupersetOf(range: AbstractRange): Boolean","description":"com.github.polyrocketmatt.kstat.AbstractRange.isSupersetOf","location":"-k-stat/com.github.polyrocketmatt.kstat/-abstract-range/is-superset-of.html","searchKeys":["isSupersetOf","fun isSupersetOf(range: AbstractRange): Boolean","com.github.polyrocketmatt.kstat.AbstractRange.isSupersetOf"]},{"name":"fun main()","description":"com.github.polyrocketmatt.kstat.main","location":"-k-stat/com.github.polyrocketmatt.kstat/main.html","searchKeys":["main","fun main()","com.github.polyrocketmatt.kstat.main"]},{"name":"fun overlaps(range: AbstractRange): Boolean","description":"com.github.polyrocketmatt.kstat.AbstractRange.overlaps","location":"-k-stat/com.github.polyrocketmatt.kstat/-abstract-range/overlaps.html","searchKeys":["overlaps","fun overlaps(range: AbstractRange): Boolean","com.github.polyrocketmatt.kstat.AbstractRange.overlaps"]},{"name":"fun overlaps(value: Double): Boolean","description":"com.github.polyrocketmatt.kstat.AbstractRange.overlaps","location":"-k-stat/com.github.polyrocketmatt.kstat/-abstract-range/overlaps.html","searchKeys":["overlaps","fun overlaps(value: Double): Boolean","com.github.polyrocketmatt.kstat.AbstractRange.overlaps"]},{"name":"fun pdf(x: Int): SingleRange","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.pdf","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/pdf.html","searchKeys":["pdf","fun pdf(x: Int): SingleRange","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.pdf"]},{"name":"fun toDouble(): Double","description":"com.github.polyrocketmatt.kstat.SingleRange.toDouble","location":"-k-stat/com.github.polyrocketmatt.kstat/-single-range/to-double.html","searchKeys":["toDouble","fun toDouble(): Double","com.github.polyrocketmatt.kstat.SingleRange.toDouble"]},{"name":"fun toDoubleArray(): DoubleArray","description":"com.github.polyrocketmatt.kstat.ContinuousRange.toDoubleArray","location":"-k-stat/com.github.polyrocketmatt.kstat/-continuous-range/to-double-array.html","searchKeys":["toDoubleArray","fun toDoubleArray(): DoubleArray","com.github.polyrocketmatt.kstat.ContinuousRange.toDoubleArray"]},{"name":"fun toDoubleArray(): DoubleArray","description":"com.github.polyrocketmatt.kstat.DiscreteRange.toDoubleArray","location":"-k-stat/com.github.polyrocketmatt.kstat/-discrete-range/to-double-array.html","searchKeys":["toDoubleArray","fun toDoubleArray(): DoubleArray","com.github.polyrocketmatt.kstat.DiscreteRange.toDoubleArray"]},{"name":"fun valueOf(value: String): Distribution.EntropyType","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.EntropyType.valueOf","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/-entropy-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Distribution.EntropyType","com.github.polyrocketmatt.kstat.distributions.Distribution.EntropyType.valueOf"]},{"name":"fun values(): Array<Distribution.EntropyType>","description":"com.github.polyrocketmatt.kstat.distributions.Distribution.EntropyType.values","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-distribution/-entropy-type/values.html","searchKeys":["values","fun values(): Array<Distribution.EntropyType>","com.github.polyrocketmatt.kstat.distributions.Distribution.EntropyType.values"]},{"name":"interface IRange","description":"com.github.polyrocketmatt.kstat.IRange","location":"-k-stat/com.github.polyrocketmatt.kstat/-i-range/index.html","searchKeys":["IRange","interface IRange","com.github.polyrocketmatt.kstat.IRange"]},{"name":"open operator fun contains(range: AbstractRange): Boolean","description":"com.github.polyrocketmatt.kstat.AbstractRange.contains","location":"-k-stat/com.github.polyrocketmatt.kstat/-abstract-range/contains.html","searchKeys":["contains","open operator fun contains(range: AbstractRange): Boolean","com.github.polyrocketmatt.kstat.AbstractRange.contains"]},{"name":"open operator fun contains(value: Double): Boolean","description":"com.github.polyrocketmatt.kstat.AbstractRange.contains","location":"-k-stat/com.github.polyrocketmatt.kstat/-abstract-range/contains.html","searchKeys":["contains","open operator fun contains(value: Double): Boolean","com.github.polyrocketmatt.kstat.AbstractRange.contains"]},{"name":"open operator override fun contains(range: AbstractRange): Boolean","description":"com.github.polyrocketmatt.kstat.DiscreteRange.contains","location":"-k-stat/com.github.polyrocketmatt.kstat/-discrete-range/contains.html","searchKeys":["contains","open operator override fun contains(range: AbstractRange): Boolean","com.github.polyrocketmatt.kstat.DiscreteRange.contains"]},{"name":"open operator override fun contains(range: AbstractRange): Boolean","description":"com.github.polyrocketmatt.kstat.SingleRange.contains","location":"-k-stat/com.github.polyrocketmatt.kstat/-single-range/contains.html","searchKeys":["contains","open operator override fun contains(range: AbstractRange): Boolean","com.github.polyrocketmatt.kstat.SingleRange.contains"]},{"name":"open operator override fun contains(value: Double): Boolean","description":"com.github.polyrocketmatt.kstat.DiscreteRange.contains","location":"-k-stat/com.github.polyrocketmatt.kstat/-discrete-range/contains.html","searchKeys":["contains","open operator override fun contains(value: Double): Boolean","com.github.polyrocketmatt.kstat.DiscreteRange.contains"]},{"name":"open operator override fun contains(value: Double): Boolean","description":"com.github.polyrocketmatt.kstat.SingleRange.contains","location":"-k-stat/com.github.polyrocketmatt.kstat/-single-range/contains.html","searchKeys":["contains","open operator override fun contains(value: Double): Boolean","com.github.polyrocketmatt.kstat.SingleRange.contains"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.equals","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.equals","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.equals"]},{"name":"open override fun cdf(x: Double): SingleRange","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.cdf","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/cdf.html","searchKeys":["cdf","open override fun cdf(x: Double): SingleRange","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.cdf"]},{"name":"open override fun cdf(x: Double): SingleRange","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.cdf","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/cdf.html","searchKeys":["cdf","open override fun cdf(x: Double): SingleRange","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.cdf"]},{"name":"open override fun difference(range: IRange): List<ContinuousRange>","description":"com.github.polyrocketmatt.kstat.ContinuousRange.difference","location":"-k-stat/com.github.polyrocketmatt.kstat/-continuous-range/difference.html","searchKeys":["difference","open override fun difference(range: IRange): List<ContinuousRange>","com.github.polyrocketmatt.kstat.ContinuousRange.difference"]},{"name":"open override fun difference(range: IRange): List<DiscreteRange>","description":"com.github.polyrocketmatt.kstat.DiscreteRange.difference","location":"-k-stat/com.github.polyrocketmatt.kstat/-discrete-range/difference.html","searchKeys":["difference","open override fun difference(range: IRange): List<DiscreteRange>","com.github.polyrocketmatt.kstat.DiscreteRange.difference"]},{"name":"open override fun difference(range: IRange): List<DiscreteRange>","description":"com.github.polyrocketmatt.kstat.SingleRange.difference","location":"-k-stat/com.github.polyrocketmatt.kstat/-single-range/difference.html","searchKeys":["difference","open override fun difference(range: IRange): List<DiscreteRange>","com.github.polyrocketmatt.kstat.SingleRange.difference"]},{"name":"open override fun difference(range: IRange): List<Range>","description":"com.github.polyrocketmatt.kstat.Range.difference","location":"-k-stat/com.github.polyrocketmatt.kstat/-range/difference.html","searchKeys":["difference","open override fun difference(range: IRange): List<Range>","com.github.polyrocketmatt.kstat.Range.difference"]},{"name":"open override fun entropy(type: Distribution.EntropyType): Double","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.entropy","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/entropy.html","searchKeys":["entropy","open override fun entropy(type: Distribution.EntropyType): Double","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.entropy"]},{"name":"open override fun entropy(type: Distribution.EntropyType): Double","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.entropy","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/entropy.html","searchKeys":["entropy","open override fun entropy(type: Distribution.EntropyType): Double","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.entropy"]},{"name":"open override fun fisherInformation(): Double","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.fisherInformation","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/fisher-information.html","searchKeys":["fisherInformation","open override fun fisherInformation(): Double","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.fisherInformation"]},{"name":"open override fun fisherInformation(): Double","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.fisherInformation","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/fisher-information.html","searchKeys":["fisherInformation","open override fun fisherInformation(): Double","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.fisherInformation"]},{"name":"open override fun intersection(range: IRange): ContinuousRange","description":"com.github.polyrocketmatt.kstat.ContinuousRange.intersection","location":"-k-stat/com.github.polyrocketmatt.kstat/-continuous-range/intersection.html","searchKeys":["intersection","open override fun intersection(range: IRange): ContinuousRange","com.github.polyrocketmatt.kstat.ContinuousRange.intersection"]},{"name":"open override fun intersection(range: IRange): DiscreteRange","description":"com.github.polyrocketmatt.kstat.DiscreteRange.intersection","location":"-k-stat/com.github.polyrocketmatt.kstat/-discrete-range/intersection.html","searchKeys":["intersection","open override fun intersection(range: IRange): DiscreteRange","com.github.polyrocketmatt.kstat.DiscreteRange.intersection"]},{"name":"open override fun intersection(range: IRange): DiscreteRange","description":"com.github.polyrocketmatt.kstat.SingleRange.intersection","location":"-k-stat/com.github.polyrocketmatt.kstat/-single-range/intersection.html","searchKeys":["intersection","open override fun intersection(range: IRange): DiscreteRange","com.github.polyrocketmatt.kstat.SingleRange.intersection"]},{"name":"open override fun intersection(range: IRange): Range","description":"com.github.polyrocketmatt.kstat.Range.intersection","location":"-k-stat/com.github.polyrocketmatt.kstat/-range/intersection.html","searchKeys":["intersection","open override fun intersection(range: IRange): Range","com.github.polyrocketmatt.kstat.Range.intersection"]},{"name":"open override fun kurtosis(): Double","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.kurtosis","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/kurtosis.html","searchKeys":["kurtosis","open override fun kurtosis(): Double","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.kurtosis"]},{"name":"open override fun kurtosis(): Double","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.kurtosis","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/kurtosis.html","searchKeys":["kurtosis","open override fun kurtosis(): Double","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.kurtosis"]},{"name":"open override fun mad(): Double","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.mad","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/mad.html","searchKeys":["mad","open override fun mad(): Double","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.mad"]},{"name":"open override fun mad(): Double","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.mad","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/mad.html","searchKeys":["mad","open override fun mad(): Double","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.mad"]},{"name":"open override fun mean(): Double","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.mean","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/mean.html","searchKeys":["mean","open override fun mean(): Double","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.mean"]},{"name":"open override fun mean(): Double","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.mean","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/mean.html","searchKeys":["mean","open override fun mean(): Double","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.mean"]},{"name":"open override fun median(): IRange","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.median","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/median.html","searchKeys":["median","open override fun median(): IRange","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.median"]},{"name":"open override fun median(): SingleRange","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.median","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/median.html","searchKeys":["median","open override fun median(): SingleRange","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.median"]},{"name":"open override fun mode(): IRange","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.mode","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/mode.html","searchKeys":["mode","open override fun mode(): IRange","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.mode"]},{"name":"open override fun mode(): SingleRange","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.mode","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/mode.html","searchKeys":["mode","open override fun mode(): SingleRange","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.mode"]},{"name":"open override fun moment(n: Int): Double","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.moment","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/moment.html","searchKeys":["moment","open override fun moment(n: Int): Double","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.moment"]},{"name":"open override fun moment(n: Int): Double","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.moment","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/moment.html","searchKeys":["moment","open override fun moment(n: Int): Double","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.moment"]},{"name":"open override fun momentGeneratingFunction(): (Int) -> Double","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.momentGeneratingFunction","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/moment-generating-function.html","searchKeys":["momentGeneratingFunction","open override fun momentGeneratingFunction(): (Int) -> Double","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.momentGeneratingFunction"]},{"name":"open override fun momentGeneratingFunction(): (Int) -> Double","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.momentGeneratingFunction","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/moment-generating-function.html","searchKeys":["momentGeneratingFunction","open override fun momentGeneratingFunction(): (Int) -> Double","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.momentGeneratingFunction"]},{"name":"open override fun pdf(x: Double): SingleRange","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.pdf","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/pdf.html","searchKeys":["pdf","open override fun pdf(x: Double): SingleRange","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.pdf"]},{"name":"open override fun pdf(x: Double): SingleRange","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.pdf","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/pdf.html","searchKeys":["pdf","open override fun pdf(x: Double): SingleRange","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.pdf"]},{"name":"open override fun quantile(x: Double): IRange","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.quantile","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/quantile.html","searchKeys":["quantile","open override fun quantile(x: Double): IRange","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.quantile"]},{"name":"open override fun quantile(x: Double): SingleRange","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.quantile","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/quantile.html","searchKeys":["quantile","open override fun quantile(x: Double): SingleRange","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.quantile"]},{"name":"open override fun sample(n: Int, vararg support: Double): DoubleArray","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.sample","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/sample.html","searchKeys":["sample","open override fun sample(n: Int, vararg support: Double): DoubleArray","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.sample"]},{"name":"open override fun sample(n: Int, vararg support: Double): DoubleArray","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.sample","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/sample.html","searchKeys":["sample","open override fun sample(n: Int, vararg support: Double): DoubleArray","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.sample"]},{"name":"open override fun sample(vararg support: Double): Double","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.sample","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/sample.html","searchKeys":["sample","open override fun sample(vararg support: Double): Double","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.sample"]},{"name":"open override fun sample(vararg support: Double): Double","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.sample","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/sample.html","searchKeys":["sample","open override fun sample(vararg support: Double): Double","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.sample"]},{"name":"open override fun skewness(): Double","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.skewness","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/skewness.html","searchKeys":["skewness","open override fun skewness(): Double","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.skewness"]},{"name":"open override fun skewness(): Double","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.skewness","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/skewness.html","searchKeys":["skewness","open override fun skewness(): Double","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.skewness"]},{"name":"open override fun stddev(): Double","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.stddev","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/stddev.html","searchKeys":["stddev","open override fun stddev(): Double","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.stddev"]},{"name":"open override fun stddev(): Double","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.stddev","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/stddev.html","searchKeys":["stddev","open override fun stddev(): Double","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.stddev"]},{"name":"open override fun toString(): String","description":"com.github.polyrocketmatt.kstat.AbstractRange.toString","location":"-k-stat/com.github.polyrocketmatt.kstat/-abstract-range/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.polyrocketmatt.kstat.AbstractRange.toString"]},{"name":"open override fun toString(): String","description":"com.github.polyrocketmatt.kstat.ContinuousRange.toString","location":"-k-stat/com.github.polyrocketmatt.kstat/-continuous-range/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.polyrocketmatt.kstat.ContinuousRange.toString"]},{"name":"open override fun toString(): String","description":"com.github.polyrocketmatt.kstat.DiscreteRange.toString","location":"-k-stat/com.github.polyrocketmatt.kstat/-discrete-range/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.polyrocketmatt.kstat.DiscreteRange.toString"]},{"name":"open override fun toString(): String","description":"com.github.polyrocketmatt.kstat.Range.toString","location":"-k-stat/com.github.polyrocketmatt.kstat/-range/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.polyrocketmatt.kstat.Range.toString"]},{"name":"open override fun toString(): String","description":"com.github.polyrocketmatt.kstat.SingleRange.toString","location":"-k-stat/com.github.polyrocketmatt.kstat/-single-range/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.polyrocketmatt.kstat.SingleRange.toString"]},{"name":"open override fun toString(): String","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.toString","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.toString"]},{"name":"open override fun toString(): String","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.toString","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/to-string.html","searchKeys":["toString","open override fun toString(): String","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.toString"]},{"name":"open override fun union(range: IRange): ContinuousRange","description":"com.github.polyrocketmatt.kstat.ContinuousRange.union","location":"-k-stat/com.github.polyrocketmatt.kstat/-continuous-range/union.html","searchKeys":["union","open override fun union(range: IRange): ContinuousRange","com.github.polyrocketmatt.kstat.ContinuousRange.union"]},{"name":"open override fun union(range: IRange): DiscreteRange","description":"com.github.polyrocketmatt.kstat.DiscreteRange.union","location":"-k-stat/com.github.polyrocketmatt.kstat/-discrete-range/union.html","searchKeys":["union","open override fun union(range: IRange): DiscreteRange","com.github.polyrocketmatt.kstat.DiscreteRange.union"]},{"name":"open override fun union(range: IRange): DiscreteRange","description":"com.github.polyrocketmatt.kstat.SingleRange.union","location":"-k-stat/com.github.polyrocketmatt.kstat/-single-range/union.html","searchKeys":["union","open override fun union(range: IRange): DiscreteRange","com.github.polyrocketmatt.kstat.SingleRange.union"]},{"name":"open override fun union(range: IRange): Range","description":"com.github.polyrocketmatt.kstat.Range.union","location":"-k-stat/com.github.polyrocketmatt.kstat/-range/union.html","searchKeys":["union","open override fun union(range: IRange): Range","com.github.polyrocketmatt.kstat.Range.union"]},{"name":"open override fun variance(): Double","description":"com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.variance","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-bernoulli-distribution/variance.html","searchKeys":["variance","open override fun variance(): Double","com.github.polyrocketmatt.kstat.distributions.BernoulliDistribution.variance"]},{"name":"open override fun variance(): Double","description":"com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.variance","location":"-k-stat/com.github.polyrocketmatt.kstat.distributions/-binomial-distribution/variance.html","searchKeys":["variance","open override fun variance(): Double","com.github.polyrocketmatt.kstat.distributions.BinomialDistribution.variance"]},{"name":"val accuracy: Double = 0.01","description":"com.github.polyrocketmatt.kstat.ContinuousRange.accuracy","location":"-k-stat/com.github.polyrocketmatt.kstat/-continuous-range/accuracy.html","searchKeys":["accuracy","val accuracy: Double = 0.01","com.github.polyrocketmatt.kstat.ContinuousRange.accuracy"]},{"name":"val max: Double","description":"com.github.polyrocketmatt.kstat.Range.max","location":"-k-stat/com.github.polyrocketmatt.kstat/-range/max.html","searchKeys":["max","val max: Double","com.github.polyrocketmatt.kstat.Range.max"]},{"name":"val maxVal: Double","description":"com.github.polyrocketmatt.kstat.AbstractRange.maxVal","location":"-k-stat/com.github.polyrocketmatt.kstat/-abstract-range/max-val.html","searchKeys":["maxVal","val maxVal: Double","com.github.polyrocketmatt.kstat.AbstractRange.maxVal"]},{"name":"val min: Double","description":"com.github.polyrocketmatt.kstat.Range.min","location":"-k-stat/com.github.polyrocketmatt.kstat/-range/min.html","searchKeys":["min","val min: Double","com.github.polyrocketmatt.kstat.Range.min"]},{"name":"val minVal: Double","description":"com.github.polyrocketmatt.kstat.AbstractRange.minVal","location":"-k-stat/com.github.polyrocketmatt.kstat/-abstract-range/min-val.html","searchKeys":["minVal","val minVal: Double","com.github.polyrocketmatt.kstat.AbstractRange.minVal"]},{"name":"val value: Double","description":"com.github.polyrocketmatt.kstat.SingleRange.value","location":"-k-stat/com.github.polyrocketmatt.kstat/-single-range/value.html","searchKeys":["value","val value: Double","com.github.polyrocketmatt.kstat.SingleRange.value"]},{"name":"val values: DoubleArray","description":"com.github.polyrocketmatt.kstat.ContinuousRange.values","location":"-k-stat/com.github.polyrocketmatt.kstat/-continuous-range/values.html","searchKeys":["values","val values: DoubleArray","com.github.polyrocketmatt.kstat.ContinuousRange.values"]},{"name":"val values: DoubleArray","description":"com.github.polyrocketmatt.kstat.DiscreteRange.values","location":"-k-stat/com.github.polyrocketmatt.kstat/-discrete-range/values.html","searchKeys":["values","val values: DoubleArray","com.github.polyrocketmatt.kstat.DiscreteRange.values"]}]
